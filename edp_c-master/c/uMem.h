/*
 A minimum implementation of memory manage, This is important for Embeded systems, since we can not use C lib Freely.
 This implementation is something similar to JiaoJinXing's, I just port it to LwIP.

 By Forrest.
*/


#ifndef __uMEM_H__
#define __uMEM_H__

#include "Common.h"

typedef struct tag_FreeMem
{
	struct tag_FreeMem *Prev;
	struct tag_FreeMem *Next;
	uint32 Size;
} FreeMem;


typedef struct tag_UsingMem
{
	uint32 Size;
} UsingMem;


/*
;*****************************************************************************************************
;* 函数名称 : uMEM_Init
;* 描    述 : 内存管理初始化
;* 输　	 入 : Addr: 有效的内存块的起始地址, Size: 内存块的大小
;*   
;* 输　	 出 : TRUE OR FALSE
;*----------------------------------------------------------------------------------------------------
;* 修改备注 : 
;*****************************************************************************************************
;*/
uint8 uMEM_Init(void);


/*
;*****************************************************************************************************
;* 函数名称 : uMEM_New
;* 描    述 : 内存申请
;* 输　	 入 : Size: 内存块的大小
;*   
;* 输　	 出 : 可用的内存块的起始地址 或 NULL
;*----------------------------------------------------------------------------------------------------
;* 修改备注 : 
;*****************************************************************************************************
;*/
void *uMEM_New(uint32 Size);


/*
;*****************************************************************************************************
;* 函数名称 : uMEM_Free
;* 描    述 : 内存释放
;* 输　	 入 : Addr: 已分配的内存块的起始地址
;*   
;* 输　	 出 : 无
;*----------------------------------------------------------------------------------------------------
;* 修改备注 : 
;*****************************************************************************************************
;*/
void uMEM_Free(void *Addr);

#endif

/*
;*****************************************************************************************************
;*											End of File
;*****************************************************************************************************
;*/	
